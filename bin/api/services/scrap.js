"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cheerio = require("cheerio");
const rp = require("request-promise");
const scrapDetailsApp_1 = require("./scrapDetailsApp");
const url = 'https://play.google.com';
async function getCategories() {
    const categories = [];
    const body = await rp(`${url}/store/apps`);
    const $ = cheerio.load(body);
    $('.title-link').each((i, elem) => {
        categories.push({ link: elem.attribs.href, name: elem.children[0].data.trim() });
    });
    return categories;
}
async function getUrlAppDetails(category, quantityGetApps) {
    const appsDetails = { categoryName: category.name, detailsUrl: [] };
    const body = await rp(`${url}${category.link}`);
    const $ = cheerio.load(body);
    $('.stars-container a').each((i, elem) => {
        if (i > quantityGetApps - 1)
            return false; // i init 0
        appsDetails.detailsUrl.push(elem.attribs.href);
    });
    return appsDetails;
}
async function scrap(quantityGetApps) {
    const categories = await getCategories();
    let appsUrlDetails = [];
    for (let cat of categories) {
        appsUrlDetails.push(await getUrlAppDetails(cat, quantityGetApps));
    }
    return await scrapDetailsApp_1.scrapDetailsApp(appsUrlDetails);
}
exports.scrap = scrap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyYXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zZXJ2ZXIvYXBpL3NlcnZpY2VzL3NjcmFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUNBQW1DO0FBQ25DLHNDQUFzQztBQUV0Qyx1REFBb0Q7QUFFcEQsTUFBTSxHQUFHLEdBQUcseUJBQXlCLENBQUM7QUFFdEMsS0FBSztJQUNILE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztJQUN0QixNQUFNLElBQUksR0FBRyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsYUFBYSxDQUFDLENBQUM7SUFDM0MsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUU3QixDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFO1FBQ2hDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNuRixDQUFDLENBQUMsQ0FBQztJQUVILE1BQU0sQ0FBQyxVQUFVLENBQUM7QUFDcEIsQ0FBQztBQUVELEtBQUssMkJBQTJCLFFBQWEsRUFBRSxlQUF1QjtJQUNwRSxNQUFNLFdBQVcsR0FBRyxFQUFFLFlBQVksRUFBRSxRQUFRLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUVwRSxNQUFNLElBQUksR0FBRyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUNoRCxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRTdCLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRTtRQUV2QyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsZUFBZSxHQUFHLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxXQUFXO1FBQ3RELFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFakQsQ0FBQyxDQUFDLENBQUM7SUFDSCxNQUFNLENBQUMsV0FBVyxDQUFDO0FBQ3JCLENBQUM7QUFFTSxLQUFLLGdCQUFnQixlQUF1QjtJQUNqRCxNQUFNLFVBQVUsR0FBRyxNQUFNLGFBQWEsRUFBRSxDQUFDO0lBQ3pDLElBQUksY0FBYyxHQUFHLEVBQUUsQ0FBQztJQUV4QixHQUFHLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQzNCLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsZUFBZSxDQUFDLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU0saUNBQWUsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUMvQyxDQUFDO0FBVEQsc0JBU0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjaGVlcmlvIGZyb20gJ2NoZWVyaW8nO1xuaW1wb3J0ICogYXMgcnAgZnJvbSAncmVxdWVzdC1wcm9taXNlJztcblxuaW1wb3J0IHsgc2NyYXBEZXRhaWxzQXBwIH0gZnJvbSAnLi9zY3JhcERldGFpbHNBcHAnO1xuXG5jb25zdCB1cmwgPSAnaHR0cHM6Ly9wbGF5Lmdvb2dsZS5jb20nO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRDYXRlZ29yaWVzKCk6IFByb21pc2U8YW55PiB7XG4gIGNvbnN0IGNhdGVnb3JpZXMgPSBbXTtcbiAgY29uc3QgYm9keSA9IGF3YWl0IHJwKGAke3VybH0vc3RvcmUvYXBwc2ApO1xuICBjb25zdCAkID0gY2hlZXJpby5sb2FkKGJvZHkpO1xuXG4gICQoJy50aXRsZS1saW5rJykuZWFjaCgoaSwgZWxlbSkgPT4ge1xuICAgIGNhdGVnb3JpZXMucHVzaCh7IGxpbms6IGVsZW0uYXR0cmlicy5ocmVmLCBuYW1lOiBlbGVtLmNoaWxkcmVuWzBdLmRhdGEudHJpbSgpIH0pO1xuICB9KTtcblxuICByZXR1cm4gY2F0ZWdvcmllcztcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0VXJsQXBwRGV0YWlscyhjYXRlZ29yeTogYW55LCBxdWFudGl0eUdldEFwcHM6IG51bWJlcik6IFByb21pc2U8YW55PiB7XG4gIGNvbnN0IGFwcHNEZXRhaWxzID0geyBjYXRlZ29yeU5hbWU6IGNhdGVnb3J5Lm5hbWUsIGRldGFpbHNVcmw6IFtdIH07XG5cbiAgY29uc3QgYm9keSA9IGF3YWl0IHJwKGAke3VybH0ke2NhdGVnb3J5Lmxpbmt9YCk7XG4gIGNvbnN0ICQgPSBjaGVlcmlvLmxvYWQoYm9keSk7XG5cbiAgJCgnLnN0YXJzLWNvbnRhaW5lciBhJykuZWFjaCgoaSwgZWxlbSkgPT4ge1xuXG4gICAgaWYgKGkgPiBxdWFudGl0eUdldEFwcHMgLSAxKSByZXR1cm4gZmFsc2U7IC8vIGkgaW5pdCAwXG4gICAgYXBwc0RldGFpbHMuZGV0YWlsc1VybC5wdXNoKGVsZW0uYXR0cmlicy5ocmVmKTtcblxuICB9KTtcbiAgcmV0dXJuIGFwcHNEZXRhaWxzO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2NyYXAocXVhbnRpdHlHZXRBcHBzOiBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xuICBjb25zdCBjYXRlZ29yaWVzID0gYXdhaXQgZ2V0Q2F0ZWdvcmllcygpO1xuICBsZXQgYXBwc1VybERldGFpbHMgPSBbXTtcblxuICBmb3IgKGxldCBjYXQgb2YgY2F0ZWdvcmllcykge1xuICAgIGFwcHNVcmxEZXRhaWxzLnB1c2goYXdhaXQgZ2V0VXJsQXBwRGV0YWlscyhjYXQsIHF1YW50aXR5R2V0QXBwcykpO1xuICB9XG5cbiAgcmV0dXJuIGF3YWl0IHNjcmFwRGV0YWlsc0FwcChhcHBzVXJsRGV0YWlscyk7XG59Il19